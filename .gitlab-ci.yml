image: node:16.13.2

stages:
  - install
  - code_quality
  - test
  - build

install:
  stage: install
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
  cache: 
    key: $CI_COMMIT_REF_SLUG-$CI_PROJECT_DIR
    paths:
      - node_modules/
  script:
    - npm install

eslint:
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
  stage: code_quality
  cache: 
    key: $CI_COMMIT_REF_SLUG-$CI_PROJECT_DIR
    paths:
      - node_modules/
    policy: pull
  script:
    - npm run eslint -- --ext .jsx,.js src/

unit_tests:
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
  stage: test
  cache: 
    key: $CI_COMMIT_REF_SLUG-$CI_PROJECT_DIR
    paths:
      - node_modules/
    policy: pull
  script:
    - npm test

react_build:
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
  stage: build
  cache: 
    key: $CI_COMMIT_REF_SLUG-$CI_PROJECT_DIR
    paths:
      - node_modules/
    policy: pull
  script:
    - npm run-script build
  artifacts:
    paths:
    - build/

pages:
  image: alpine:latest
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
  stage: deploy
  variables:
    GIT_STRATEGY: none        # Do not clone git repo
  script:
    # Rename the CRA `build` folder to `public`
    - mv build public         
  artifacts:
    paths:
      - public

